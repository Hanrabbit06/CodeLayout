fun main(){
    
    
   var c1 : Car = Car("빨강",50)
    
   var c2 : Car = Car("파랑", 20)
    
   var c3: Car = Car("초록", 250)
  
    c1.upSpeed(50)
    println("자동차 1의 색상은 "+c1.color+"이며, 속도는 "+c1.speed+"Km입니다.");
    
    c2.upSpeed(20)
    println("자동차 2의 색상은 "+c2.color+"이며, 속도는 "+c2.speed+"Km입니다.");
    
    c3.upSpeed(250)
    println("자동차 2의 색상은 "+c3.color+"이며, 속도는 "+c3.speed+"Km입니다.");
    
    println("생산된 차의 대수(정적필드) ==> "+Car.carCount)
    println("생산된 차의 대수(정적 메소드) ==> "+Car.currentCarCount())
    println("차의 최고 제한 속도 ==> "+Car.MAXSPEED)
   
    println("PI의 값 ==> "+Math.PI)
    println("3의 5제곱 ==> "+Math.pow(3.0, 5.0))
    
    var auto : Automobile = Automobile()
  	 auto.upSpeed(250)
  	 println("승용차의 속도는 "+auto.speed+"Km입니다.")
    
}
open class Car {
    var color : String =""
    var speed : Int = 0
    companion object {
        var carCount : Int = 0
        const val MAXSPEED : Int = 200
        const val MINSPEED : Int = 0
        fun currentCarCount() : Int {
            return carCount
        }
    }
    
    constructor(color : String, speed: Int){
        this.color = color
        this.speed = speed
        carCount ++
    }
    
    constructor(speed: Int){ 
        this.speed = speed
    }
     
    constructor(){  
        
    }
        
    open fun upSpeed(value: Int){
        if(speed+value >= 200)
        	speed = 200
        else
           	speed = speed + value
    }
    fun downSpeed(value: Int){
        if(speed-value <= 0)
           	speed = 0
        else
           	speed = speed - value
    }
 }
class Automobile : Car {
    var seatNum : Int = 0
    
    constructor(){
       
    }
    fun countSeatNum() : Int{
         return seatNum
    }
    
    override fun upSpeed(value: Int){
        if(speed+value >= 300)
        	speed = 300
        else
        	speed = speed + value
    }
}